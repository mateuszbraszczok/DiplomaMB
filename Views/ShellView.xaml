<Window x:Class="DiplomaMB.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiplomaMB.Views"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:viewmodels="clr-namespace:DiplomaMB.ViewModels"
        xmlns:cal="http://www.caliburnproject.org"
        d:DataContext="{d:DesignInstance Type=viewmodels:ShellViewModel}"
        mc:Ignorable="d"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="MB Master Project" Height="885" Width="1220"
        cal:Message.Attach="[Event Closing] = [Action OnClose($eventArgs)]"
        Background="LightGray"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="20"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <Label Content="Settings" Grid.Row="1" Grid.Column="1" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center"/>
        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Grid.Column="1" Margin="10">
            <StackPanel Margin="5">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </StackPanel.Resources>
                <Button x:Name="ConnectSpectrometer">Connect Spectrometer</Button>
                <Button x:Name="ResetSpectrometer">Reset Device</Button>
                <StackPanel Orientation="Horizontal">
                    <xctk:IntegerUpDown Width="100" Minimum="1" Value="{Binding IntegrationTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label x:Name="Spectrometer_IntegrationTimeUnitStr"/>
                </StackPanel>
                <Button x:Name="SetIntegrationTime">Set integration time</Button>
                <Button x:Name="ExitProgram">Exit program</Button>
            </StackPanel>
        </Border>

        <Label Content="Normal Mode" Grid.Row="1" Grid.Column="2" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center"/>
        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Grid.Column="2" Margin="10">
            <StackPanel Margin="5" >
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </StackPanel.Resources>
                <StackPanel Orientation="Horizontal">
                    <xctk:IntegerUpDown Width="50" Minimum="0" Maximum="255" Value="{Binding FramesToAcquire, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Spectrometer.Connected}"/>
                    <Label Content="Number of frames of data to acquire"/>
                </StackPanel>
                <Button x:Name="GetSpectrum">Get Spectrum</Button>
                <Button x:Name="GetDarkScan">Get Dark Scan</Button>
                <Button x:Name="StartAcquire">Start Acquire Continuously</Button>
                <Button x:Name="StopAcquire">Stop Acquire</Button>
            </StackPanel>
        </Border>

        <Label Content="Smart Mode" Grid.Row="1" Grid.Column="3" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center"/>
        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Grid.Column="3"  Margin="10">
            <StackPanel Margin="5" >
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </StackPanel.Resources>
                <StackPanel Orientation="Horizontal">
                    <xctk:IntegerUpDown Width="50" Minimum="0" Maximum="255" Value="{Binding SmartRead.SpectrumsToAverage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Spectrometer.Connected}"/>
                    <Label Content="Number of scans to be averaged"/>
                </StackPanel>

                <CheckBox IsChecked="{Binding SmartRead.Smoothing}" IsEnabled="{Binding Spectrometer.Connected}">Smoothing enabled</CheckBox>
                <CheckBox IsChecked="{Binding SmartRead.DarkCompensation}" IsEnabled="{Binding Spectrometer.Connected}">Dark compensate enabled</CheckBox>
                <Button x:Name="GetSpectrumSmart">Get Spectrum</Button>
            </StackPanel>
        </Border>

        <Label Content="Spectrums management" Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="1" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center"/>
        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2" Margin="10">
            <StackPanel Margin="5" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Width" Value="190"/>
                    </Style>
                </StackPanel.Resources>
                <StackPanel>
                    <Button x:Name="SaveSelectedSpectrum">Save selected spectrum</Button>
                    <Button x:Name="LoadSpectrum">Load spectrum from file</Button>
                    <Button x:Name="DeleteSelectedSpectrum">Delete selected spectrum</Button>
                    
                    <Button x:Name="SpectrumPeaks">Detect peaks</Button>
                    <Button x:Name="Derivative">Derivative</Button>
                </StackPanel>
                <StackPanel>
                    <Button x:Name="SaveDarkScan">Save dark scan to file</Button>
                    <Button x:Name="LoadDarkScan">Load dark scan from file</Button>
                    <Button x:Name="DeleteAllSpectrums">Delete all spectrums</Button>
                    
                    <Button x:Name="SpectrumOperations" >Spectrum operations</Button>
                    <Button x:Name="EditSmoothing">Perform Smoothing</Button>
                </StackPanel>
            </StackPanel>
        </Border>
        <oxy:PlotView Model="{Binding PlotModel}" Margin="5" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="4" Width="950" Height="580" />

        <TabControl Grid.Row="3" Grid.Column="5" MaxHeight="550" Width="200">
            <TabItem Header="Spectrum List" >
                <DataGrid x:Name="Spectrums" Background="LightGray" SelectedValue="{Binding SelectedSpectrum}" CanUserAddRows="False" CanUserDeleteRows="False"
                  CanUserReorderColumns="False" AutoGenerateColumns="False" CanUserResizeColumns="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="*"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTemplateColumn Header="Visible" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        cal:Message.Attach="[Event Click] = [UpdatePlot]"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Spectrometer Info" >
                <DataGrid x:Name="Spectrometer_ConfigProperties" Background="LightGray" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                    AutoGenerateColumns="False" CanUserResizeColumns="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Row="6" Grid.ColumnSpan="20" >
            <StatusBar DockPanel.Dock="Bottom" Cursor="" >
                <StatusBarItem >
                    <Label Content="Status:"></Label>
                </StatusBarItem>
                <StatusBarItem>
                    <Label x:Name="Spectrometer_Status"></Label>
                </StatusBarItem>

                <Separator/>

                <StatusBarItem >
                    <Label Content="Dark Scan Taken:"></Label>
                </StatusBarItem>
                <StatusBarItem>
                    <Label x:Name="Spectrometer_DarkScanTaken"></Label>
                </StatusBarItem>
            </StatusBar>
        </StackPanel>
    </Grid>

</Window>