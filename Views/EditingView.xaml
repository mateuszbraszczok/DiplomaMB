<Window x:Class="DiplomaMB.Views.EditingView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiplomaMB.Views"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:utils="clr-namespace:DiplomaMB.Utils"
        mc:Ignorable="d"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Background="LightGray"
        Title="Spectrum math operations" Height="300" Width="550"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize">
    <Window.Resources>
        <utils:EnumBooleanConverter x:Key="enumBooleanConverter" />
        <utils:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"></ColumnDefinition>
            <ColumnDefinition Width="160"></ColumnDefinition>
            <ColumnDefinition Width="160"></ColumnDefinition>
            <ColumnDefinition Width="170"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="20"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <Border BorderBrush="#050505" BorderThickness="1" Grid.Row="1" Grid.Column="1" Margin="5">
            <StackPanel Margin="10">
                <Label Content="Spectrum A:"/>
                <ComboBox x:Name="Spectrums1"  SelectedValue="{Binding SelectedSpectrum1}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
        </Border>


        <Border BorderBrush="#050505" BorderThickness="1" Grid.Row="1" Grid.Column="2" Margin="5">
            <StackPanel Margin="10">
                <Label Content="Operation"/>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Add}">A + B</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Subtract}">A - B</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Multiply}">A * B</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Divide}">A / B</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=BaselineRemove}">BaselineRemove(A)</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Average}">Average(A,B)</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOperation, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Merging}">Merge(A,B)</RadioButton>
            </StackPanel>
        </Border>

        <Border BorderBrush="#050505" BorderThickness="1" Grid.Row="1" Grid.Column="3" Margin="5">
            <StackPanel>
                <StackPanel Visibility="{Binding IsSpectrums2ComboBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="10" >
                    <RadioButton Content="Spectrum B" IsChecked="{Binding IsPanel1Enabled}" GroupName="PanelSwitch"/>

                    <StackPanel Orientation="Vertical" IsEnabled="{Binding IsPanel1Enabled}" Margin="5">
                        <ComboBox x:Name="Spectrums2" SelectedValue="{Binding SelectedSpectrum2}" IsSynchronizedWithCurrentItem="True" SelectedIndex="1">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>

                    <RadioButton Content="Value B" IsChecked="{Binding IsPanel2Enabled}" GroupName="PanelSwitch" IsEnabled="{Binding CanSecondValueBeNumber}" Visibility="{Binding CanSecondValueBeNumber, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <StackPanel Orientation="Vertical" IsEnabled="{Binding IsPanel2Enabled}" Margin="5" Visibility="{Binding CanSecondValueBeNumber, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Enter a Double Value:"/>
                        <TextBox x:Name="DoubleValue" VerticalAlignment="Center"
                            Text="{Binding DoubleValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N3}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="5" Visibility="{Binding MergingWindowVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Merging Threshold:"/>
                    <xctk:IntegerUpDown Width="100" Minimum="1" Maximum="1000000" Value="{Binding MergingThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="2" Visibility="{Binding MergingWindowVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="New Max Value:"/>
                    <xctk:IntegerUpDown Width="100" Minimum="1" Maximum="1000000" Value="{Binding NewMaxValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                </StackPanel>
                <StackPanel Visibility="{Binding IsSpectrums2ComboBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='invert'}" Margin="2" >
                    <Label Content="Baseline Removal Lambda:"/>
                    <xctk:LongUpDown Width="100" Minimum="1" Maximum="10000000000" Value="{Binding BaselineRemovalLambda, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>

        </Border>

        <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
            <Label Content="Enter a new spectrum name:" />
            <TextBox x:Name="NewSpectrumName"  VerticalAlignment="Center"/>
        </StackPanel>

        <Button x:Name="CloseWindow" Content="Accept Operation" Grid.Row="2" Grid.Column="3" Cursor="Hand" Margin="15" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontWeight="Bold" Padding="5"/>
    </Grid>
</Window>
